#Part 2 - attrition

#summary stats
summary(afghan$test_score_normalized)
summary(afghan$treatment)
summary(afghan$test_score_normalized[treatment == 1])
summary(afghan$test_score_normalized[treatment ==0])
summary(afghan$test_observed[treatment == 1])
summary(afghan$test_observed[treatment == 0])

#creating a dataset of only the attritted
afghanattrition <- afghan[!complete.cases(afghan),]

#comparisons of treatment and control for attritted only
t.test(heads_child ~ treatment, data = afghanattrition, alternative = "two.sided", mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95)
t.test(girl ~ treatment, data = afghanattrition, alternative = "two.sided", mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95)
t.test(age_child ~ treatment, data = afghanattrition, alternative = "two.sided", mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95)
t.test(age_head ~ treatment, data = afghanattrition, alternative = "two.sided", mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95)
t.test(yrs_ed_head ~ treatment, data = afghanattrition, alternative = "two.sided", mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95)
t.test(jeribs ~ treatment, data = afghanattrition, alternative = "two.sided", mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95)
t.test(num_sheep ~ treatment, data = afghanattrition, alternative = "two.sided", mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95)
t.test(duration_village ~ treatment, data = afghanattrition, alternative = "two.sided", mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95)
t.test(farsi ~ treatment, data = afghanattrition, alternative = "two.sided", mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95)
t.test(tajik ~ treatment, data = afghanattrition, alternative = "two.sided", mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95)
t.test(farmer ~ treatment, data = afghanattrition, alternative = "two.sided", mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95)
t.test(num_ppl_hh ~ treatment, data = afghanattrition, alternative = "two.sided", mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95)
t.test(test_observed ~ treatment, data = afghanattrition, alternative = "two.sided", mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95)
t.test(clustercode ~ treatment, data = afghanattrition, alternative = "two.sided", mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95)
t.test(chagcharan ~ treatment, data = afghanattrition, alternative = "two.sided", mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95)
t.test(formal_school ~ treatment, data = afghanattrition, alternative = "two.sided", mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95)
t.test(nearest_scl ~ treatment, data = afghanattrition, alternative = "two.sided", mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95)
t.test(tajik_farmer ~ treatment, data = afghanattrition, alternative = "two.sided", mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95)
t.test(age_child_girl ~ treatment, data = afghanattrition, alternative = "two.sided", mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95)
t.test(heads_child_girl ~ treatment, data = afghanattrition, alternative = "two.sided", mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95)

#attritors vs compliants for treatment only
t.test(heads_child ~ test_observed, data = subset(afghan,treatment==1), alternative = "two.sided", mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95)
t.test(girl ~ treatment,  data = subset(afghan,treatment==1), alternative = "two.sided", mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95)
t.test(age_child ~ test_observed, data = subset(afghan,treatment==1), alternative = "two.sided", mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95)
t.test(age_head ~ test_observed, data = subset(afghan,treatment==1), alternative = "two.sided", mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95)
t.test(yrs_ed_head ~ test_observed, data = subset(afghan,treatment==1), alternative = "two.sided", mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95)
t.test(jeribs ~ test_observed, data = subset(afghan,treatment==1), alternative = "two.sided", mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95)
t.test(num_sheep ~ test_observed, data = subset(afghan,treatment==1), alternative = "two.sided", mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95)
t.test(duration_village ~ test_observed, data = subset(afghan,treatment==1), alternative = "two.sided", mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95)
t.test(farsi ~ test_observed, data = subset(afghan,treatment==1), alternative = "two.sided", mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95)
t.test(tajik ~ test_observed, data = subset(afghan,treatment==1), alternative = "two.sided", mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95)
t.test(farmer ~ test_observed, data = subset(afghan,treatment==1), alternative = "two.sided", mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95)
t.test(num_ppl_hh ~ test_observed, data = subset(afghan,treatment==1), alternative = "two.sided", mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95)
t.test(clustercode ~ test_observed, data = subset(afghan,treatment==1), alternative = "two.sided", mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95)
t.test(chagcharan ~ test_observed, data = subset(afghan,treatment==1), alternative = "two.sided", mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95)
t.test(formal_school ~ test_observed, data = subset(afghan,treatment==1), alternative = "two.sided", mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95)
t.test(nearest_scl ~ test_observed, data = subset(afghan,treatment==1), alternative = "two.sided", mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95)
t.test(tajik_farmer ~ test_observed, data = subset(afghan,treatment==1), alternative = "two.sided", mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95)
t.test(age_child_girl ~ test_observed, data = subset(afghan,treatment==1), alternative = "two.sided", mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95)
t.test(heads_child_girl ~ test_observed, data = subset(afghan,treatment==1), alternative = "two.sided", mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95)

#attritors vs compliants for girls only
t.test(heads_child ~ test_observed, data = subset(afghan,girl==1), alternative = "two.sided", mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95)
t.test(age_child ~ test_observed, data = subset(afghan,girl==1), alternative = "two.sided", mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95)
t.test(age_head ~ test_observed, data = subset(afghan,girl==1), alternative = "two.sided", mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95)
t.test(yrs_ed_head ~ test_observed, data = subset(afghan,girl==1), alternative = "two.sided", mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95)
t.test(jeribs ~ test_observed, data = subset(afghan,girl==1), alternative = "two.sided", mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95)
t.test(num_sheep ~ test_observed, data = subset(afghan,girl==1), alternative = "two.sided", mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95)
t.test(duration_village ~ test_observed, data = subset(afghan,girl==1), alternative = "two.sided", mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95)
t.test(farsi ~ test_observed, data = subset(afghan,girl==1), alternative = "two.sided", mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95)
t.test(tajik ~ test_observed, data = subset(afghan,girl==1), alternative = "two.sided", mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95)
t.test(farmer ~ test_observed, data = subset(afghan,girl==1), alternative = "two.sided", mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95)
t.test(num_ppl_hh ~ test_observed, data = subset(afghan,girl==1), alternative = "two.sided", mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95)
t.test(clustercode ~ test_observed, data = subset(afghan,girl==1), alternative = "two.sided", mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95)
t.test(chagcharan ~ test_observed, data = subset(afghan,girl==1), alternative = "two.sided", mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95)
t.test(formal_school ~ test_observed, data = subset(afghan,girl==1), alternative = "two.sided", mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95)
t.test(nearest_scl ~ test_observed, data = subset(afghan,girl==1), alternative = "two.sided", mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95)
t.test(tajik_farmer ~ test_observed, data = subset(afghan,girl==1), alternative = "two.sided", mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95)
t.test(age_child_girl ~ test_observed, data = subset(afghan,girl==1), alternative = "two.sided", mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95)
t.test(heads_child_girl ~ test_observed, data = subset(afghan,girl==1), alternative = "two.sided", mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95)


#Part 4 - Household fixed effects regression for school enrollment on test score
install.packages("lfe")
install.packages("stargazer")
install.packages("plm")

library(sandwich)
library(lfe)
library(stargazer)
library(plm)
attach(afghan)

regschoolontest <- lm(test_score_normalized ~ 
                        formal_school + 
                        heads_child + 
                        girl + 
                        age_head + 
                        yrs_ed_head + 
                        jeribs + 
                        num_sheep + 
                        duration_village + 
                        farsi + 
                        tajik + 
                        farmer + 
                        num_ppl_hh + 
                        nearest_scl + 
                        age_child + 
                        tajik_farmer + 
                        age_child_girl +
                        heads_child_girl +
                        sheep_per_hh_member)

regschoolontestFE <- felm(test_score_normalized ~ 
                            formal_school + 
                            heads_child + 
                            girl + 
                            age_child + 
                            age_child_girl +
                            heads_child_girl
                          | hh_id)


sumregschoolontest <- summary(regschoolontest, robust = T)
sumregschoolontestFE <- summary(regschoolontestFE, robust = T)

robust_se.sumregschoolontest <- sumregschoolontest$coefficients[,2]
robust_se.sumregschoolontestFE <- sumregschoolontestFE$coefficients[,2]
stargazer(regschoolontest,regschoolontestFE, title="Results", align=TRUE, type = "text",se = list(robust_se.sumregschoolontest, robust_se.sumregschoolontestFE))
